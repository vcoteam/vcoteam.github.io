<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on </title>
    <link>http://new.vcoteam.info/tags/powershell.html</link>
    <description>Recent content in PowerShell on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://new.vcoteam.info/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use PowerShell to start an Orchestrator Workflow</title>
      <link>http://new.vcoteam.info/articles/learn-vco/297-how-to-use-powershell-to-start-an-orchestrator-workflow-2.html</link>
      <pubDate>Fri, 30 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://new.vcoteam.info/articles/learn-vco/297-how-to-use-powershell-to-start-an-orchestrator-workflow-2.html</guid>
      <description>Okay now I have provided Python and [perl](/articles/learn-vco/296-how-to-use-perl-to-start-an-orchestrator-workflow.html&amp;rdquo; rel=&amp;quot;alternate) articles to start a vRealize Orchestrator (vRO / vCO) workflow via it&amp;rsquo;s REST API so now it&amp;rsquo;s time for a PowerShell script. For this article, I followed the same format as the previous two BUT provided the option to call the script with command line parameters! You may download the script in this article from my vroClientScripts Repository on GitHub.
The Script The following code should be saved as something like runWorkflow.</description>
    </item>
    
  </channel>
</rss>