<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on </title>
    <link>http://new.vcoteam.info/tags/python.html</link>
    <description>Recent content in python on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 29 Jan 2015 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://new.vcoteam.info/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to use Python to start an Orchestrator Workflow</title>
      <link>http://new.vcoteam.info/articles/learn-vco/295-how-to-use-python-to-start-an-orchestrator-workflow.html</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>http://new.vcoteam.info/articles/learn-vco/295-how-to-use-python-to-start-an-orchestrator-workflow.html</guid>
      <description>In a previous article, I taught you how to explore and use the REST API to start a Workflow using a generic browser based REST Client. In this article, I will provide a Python based example of running the &amp;ldquo;Create a Record&amp;rdquo; workflow that was created in Part 2 of my SQL Plug-in Dynamic Types Simple CMDB for vCACarticle. Since I&amp;rsquo;m not even close to being proficient with Python, this will be a very short article!</description>
    </item>
    
  </channel>
</rss>